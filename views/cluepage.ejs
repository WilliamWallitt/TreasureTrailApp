<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Treasure Trail App</title>
  <link href="https://fonts.googleapis.com/css?family=Patrick+Hand&display=swap" rel="stylesheet">
  <!-- bootstrap cdn -->
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
  <link rel="stylesheet" type="text/css" href='/stylesheets/main.css'>
</head>

<body>
    <div class="navbar navbar-fixed-top py-md-0">
        <div class="container-fluid">
            <!-- ml auto - puts button on right side -->
            <ul class="nav navbar-nav ml-auto">
                <form>
                    <!-- FAQ button - window.location.href onClick attribute -> FAQ page -->
                    <button class="btn btn-outline-dark btn-sm m-1" type="button" onclick="window.location.href = '/faq'">FAQ</button>
                    <button class="btn btn-outline-dark btn-sm m-1" type="button">Department Page</button>
                </form>
            </ul>
        </div>

    </div>
    
    <!-- map container -->
    <div class="container-fluid p-0 m-0">
        <div id="map" class="border border-dark" style="width:100vw; height:100vh"></div>
    </div>

    <div class="container d-flex justify-content-center">
        <button class="btn btn-outline-dark" onclick="calcRoute('london', 'uk', 'exeter', 'uk')">Verify Location</button>
    </div>

    <div class="container d-flex justify-content-center" style="width:100vw; height:100vh">
        <div id="directionsPanel"></div>
    </div>
        

<script>


    // directionsDisplay.setPanel(document.getElementById('right-panel'));

    // converting current location to a location - reverse geocoding
    // im using js new fetch methods - to get my api data


    // ok - fixed the calc function, we can now get the directions between two location,
    // everytime we call the calc function -> using our onclick attribute we are finding the next location in the array
    // this is better as we dont want people to see the next step until they have solved the clue


    function coordsToAddress(lat, long) {
        // get api call for places containing that lat long
        fetch("https://maps.googleapis.com/maps/api/geocode/json?latlng=" + lat + ","+ long + "&key=AIzaSyAtnGySF8OE4Pa2VKOlkCMYvAnX8Ziza0A").then(response => {
            return response.json();
        }).then(data => {
            // do something to the data, not sure we need this...
            console.log(data);
        }).catch(err => {
            // catch err
            console.log(err);
        });
    }


    // getting current location coordinates
    function geolocation() {

        var pos;
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function(position){
                // we now set our lat/log as a object
                pos = {
                    lat: position.coords.latitude,
                    lng: position.coords.longitude
                }

                array.push(pos);
                console.log("added current location!")


        }, function(){
                    // handling any errors
                    handleLocationError(true, infoWindow, map.getCenter());
                });
        } else {
            // browser doesnt support geolocation
            handleLocationError(false, infoWindow, map.getCenter());
        }

        return pos;
    }


    // this is just saying hey if the brower doesnt have our geolocation -> throw an error
    function handleLocationError(browserHasGeolocation, infoWindow, pos) {
            infoWindow.setPosition(pos);
            infoWindow.setContent(browserHasGeolocation ?
                                'Error: The Geolocation service failed.' :
                                'Error: Your browser doesn\'t support geolocation.');
            infoWindow.open(map);
    }

    // coordinates for the forum
    var myLatLng = {lat: 50.735371, lng: -3.533782};
    // we have to declare these globally -> so we can call them during the onClick event + the calc route function
    var map;
    var directionsRenderer;
    var directionsService;

    var indexStart = 0;
    var indexEnd = 1;
    // populate array with route! this will be a DB call
    var array = [{
        lat: 50.733220,
        lng: -3.536394
    }, {
        lat: 50.737873,
        lng: -3.532218
    }, {
        lat: 50.739177,
        lng: -3.544887
    }]

    // simple map application - all this does is get our current location and finds the path to the forum
    function initMap() {
        // service to get generate the map with the route and the directions (renderer)
        // initialising the direction service and "how to get there" service
        geolocation();
        directionsService = new google.maps.DirectionsService();
        directionsRenderer = new google.maps.DirectionsRenderer();
        var forum = new google.maps.LatLng(myLatLng.lat, myLatLng.lng);
        // setting how much we zoom into the map, and the initial centering of the map
        var mapOptions = {
            zoom:15,
            center: forum
        }
        // create new map object
        map = new google.maps.Map(document.getElementById('map'), mapOptions);
        // set the map object -> load the map
        directionsRenderer.setMap(map);
        // this is loading the directions (list of instructions how to get there)
        directionsRenderer.setPanel(document.getElementById('directionsPanel'));
    }

    function calcRoute(startAddress, startCountry, endAddress, endCountry) {

        // just as i have only 2 index places 
        if (indexEnd > 3) {
            indexStart = 0;
            indexEnd = 1;
        }

        var request = {
            // we can also use new google.maps.LatLng(lat, lng) for our results;
            // harrison building 50.737873, 3.532218
            // origin: startAddress+","+startCountry,
            // destination: endAddress+","+endCountry,
            origin: new google.maps.LatLng(array[indexStart].lat, array[indexStart].lng),
            destination: new google.maps.LatLng(array[indexEnd].lat, array[indexEnd].lng),
            travelMode: 'WALKING'
        };
        // directionservice is just allowing use to use google to calc route
        directionsService.route(request, function(result, status) {
            if (status == 'OK') {
                directionsRenderer.setDirections(result);
                // basically we want every click to update the directions loaded - so we go through the list of coords
                indexStart += 1;
                indexEnd += 1;
            }
        });
    }

</script>

<script src="https://code.jquery.com/jquery-3.1.0.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAtnGySF8OE4Pa2VKOlkCMYvAnX8Ziza0A&callback=initMap"
async defer></script>

    </body>
</html>


